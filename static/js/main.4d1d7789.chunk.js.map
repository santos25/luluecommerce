{"version":3,"sources":["Redux/user/user.types.js","Redux/user/user.reducer.js","Redux/Cart/cart.types.js","Redux/Cart/car-utils.js","Redux/Cart/cart.reducer.js","Redux/directory/directory.types.js","Redux/directory/directory.reducer.js","Redux/shop/shop.types.js","Redux/shop/shop.reducer.js","Redux/Admin/Products/product.type.js","Redux/Admin/Products/product.reducer.js","Redux/root-reducer.js","Redux/store.js","FireBase/FireBaseUtil.js","Redux/user/user-selectors.js","components/Admin-components/NavAdmin/NavAdmin.component.js","Redux/Admin/Products/product.actions.js","Redux/Admin/Products/product.selectors.js","components/Admin-components/products/CreateProduct.component.js","components/Admin-components/products/ModalDialogAdd.js","components/Admin-components/products/EditProduct.js","components/Admin-components/products/ModalDialogEdit.js","components/Admin-components/products/ProductList.js","components/with-spinner/withSpinner.js","components/Admin-components/products/ProductHomePage.component.js","components/Admin-components/mini-drawer/MiniDrawer.js","components/Admin-components/prendas/HandleRegisterPrenda.js","Redux/Cart/cart-selectors.js","components/Admin-components/prendas/CreatePrendas.js","Redux/Cart/cart.action.js","components/Cart-Icon/car-icon.component.js","components/cart-items/cart-items.component.js","components/Card-Dropdown/card-dropdown.js","components/Navegation/Nav.js","Redux/directory/directory.selectors.js","Redux/shop/shop.selectors.js","Redux/shop/shop.actions.js","components/Header/Header.js","components/SlickArrows/NextArrow.js","components/SlickArrows/PreviewArrow.js","components/CardImages/CardImages.js","components/SlickCollection/SlickCollection.js","components/Directory/Directory.js","Redux/directory/directory.action.js","pages/homepage/HomePage.js","components/CollectionOverview/CollectionOverview.js","pages/CollectionPage/CollectionPage.js","components/productDetail/ProductDetail.js","pages/ShopPage/ShopPage.js","components/checkoutitems/checkOutItems.js","pages/CheckoutPage/checkout.component.js","components/SignInComponent/SignInComponent.js","components/SignUpComponent/SignUp.js","components/Footer/Footer.js","App.js","Redux/user/user.actions.js","index.js"],"names":["userActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","payload","cartTypes","TOGGLE_CART","ADDITEMS_TO_CART","CLEAR_ITEM","REMOVE_ITEM","addUniqueitemTocart","cartitems","newItem","itemExist","find","item","id","map","quantity","clearItemfromCart","items","itemtoRemove","filter","INITIAL_SATE","hidden","CartReducer","CartType","direcTypes","LOAD_CATEGORY_CLOTHES","LOAD_NEW_COLLECTION","DirectoryData","newCollection","directoryReducer","directoryTypes","SHOP_TYPES","FETCHING_COLLECIONS_START","FETCHING_COLLECTIONS_SUCCESS","FETCHING_COLLECTIONS_FAILED","dataShop","isFetching","errorMessage","shopReducer","SHOPTYPES","PRODUCT_TYPES","FETCHING_PRODUCTS_START","FETCHING_PRODUCTS_SUCCESS","FETCHING_PRODUCTS_FAILED","UPLOADING_PRODUCTS_START","UPLOADING_PRODUCTS_SUCCESS","UPLOADING_PRODUCTS_FAILED","isUploading","errorUpload","products","productReducer","PRODUCT_TYPE","persistConfig","key","storage","whitelist","rootReducer","combineReducers","user","cart","cartReducer","directory","shop","admin","persistReducer","middleware","logger","thunk","store","createStore","applyMiddleware","persistor","persistStore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","catch","error","console","log","createDocumentUserDb","userAuth","otherProperties","a","userRef","doc","uid","get","exists","displayName","email","date","Date","set","uploadProductDB","document","product","itemTotal","data","categories","hasOwnProperty","category","Object","keys","length","objItems","forEach","i","createdt","ref","toLowerCase","merge","result","uploadImages","genre","promisesItem","image","uploadImage","name","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","index","Promise","all","resultImages","getDownloadURL","resultUrlImages","updateItem","docRef","itemKey","editedItem","update","removeItem","FieldValue","delete","currentUserSelector","createSelector","useStyle","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","link","flexGrow","connect","open","handleDrawerOpen","classes","AppBar","position","color","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Menu","Link","component","RouterLink","to","Button","variant","size","signOut","uploadProductsStart","uploadProductsSuccess","fetchingProductsAsync","dispatch","collection","productValues","docs","adminData","productSelector","dataItems","categoryKey","push","itemkey","isFetchSelector","isUploadinSelector","useStyles","paper","marginTop","spacing","flexDirection","alignItems","form","submit","margin","root","input","formControl","minWidth","maxWidth","chips","flexWrap","chip","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","uploadStart","uploadSuccess","handleClose","useTheme","useState","brand","itemsQuantity","setProduct","price","detail","tallas","setItems","itemschips","setItemsChip","setCategories","setTallas","useEffect","handleInputs","e","target","value","handleItems","indexChange","objectChanged","objectItemChip","files","handleRegister","preventDefault","where","uploadedItemsImages","Container","CssBaseline","Typography","noValidate","Grid","container","xs","sm","FormControl","fullWidth","InputLabel","Select","labelId","onChange","prendas","valuesPrendas","prenda","talla","MenuItem","categoryObjectSelected","TextField","required","label","defaultValue","Box","accept","multiple","htmlFor","startIcon","CloudUpload","Chip","onDelete","Input","renderValue","selected","CircularProgress","ModalDialogAdd","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","justifyContent","overflow","backgroundColor","palette","background","circleprogress","icon","gridList","height","updateStart","updateSuccess","selectedItem","setItem","imagesChips","setimagesChips","addedImages","useRef","handleItem","current","handleSave","uploadedImages","GridList","cellHeight","cols","GridListTile","src","alt","GridListTileBar","title","subtitle","actionIcon","splice","handleDeleteImages","Delete","ModalDialogEdit","large","table","ProductList","openModalAdd","setOpenModal","openModalEdit","setOpenModalEdit","handleModalAdd","button","endIcon","AddCircle","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Avatar","Edit","handleDeleteItem","WithSpinner","WrappedComponent","isLoading","otherProps","ProductListWithSpinner","isFetchingProducts","fetchProductsAsync","idcollection","productoid","productRef","removeItemsAsync","currentPage","setCurrentPage","handleCurrentPage","pagetogo","handleRemoveItems","productEdit","backStep","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","padding","mixins","content","MiniDrawer","setOpen","basename","Drawer","direction","ChevronRight","ChevronLeft","Divider","List","ListItem","ListItemIcon","Mail","ListItemText","primary","exact","path","HandleRegisterPrenda","tallavalues","prendasitems","setPrendasItems","savePrenda","setGenre","typetalla","m","selectCart","setQuantity","arrayvalues","newprendasRef","batch","newDocPrendaRef","commit","itemCountSelector","reduce","acumulator","currentItem","itemTotaValueSelector","cartitemsSelector","hiddeCartSelector","toggleCart","addItemsToCart","mapStateToProps","createStructuredSelector","itemCount","Badge","badgeContent","ShoppingCart","CardItems","cartdropdown","right","top","bgcolor","common","white","withRouter","history","borderRadius","border","p","fon","mt","grow","black","search","shape","fade","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","noWrap","Search","InputBase","placeholder","inputProps","aria-haspopup","AccountCircle","categorySelector","newCollectionSelector","landscape","landscapeImageSelector","genreId","collectionGenre","undefined","suggestedCollectionsSelector","categoryRandom","categorySuggested","categoryid","isLoadingCollections","fetchingCollectionsAsync","collections","shop_types","fetchingCollectionSucces","Header","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","pauseOnHover","arrows","NextArrow","props","PreviewArrow","fontSize","media","url","tagId","useHistory","match","useRouteMatch","params","genreid","Card","CardActionArea","encodeURI","CardMedia","CardContent","FavoriteBorder","CardActions","SlickCollection","nextArrow","prevArrow","transform","gridListTitle","cursor","titleBar","backgroundPosition","backgroundSize","categoryCollection","imageHeader","loadDirectory","loadNewCollection","loadallCollections","allNewCollection","sort","x","y","toDate","mb","rows","handleCategory","toUpperCase","titlePosition","actionPosition","ml","HomePage","gridListTile","ownProps","imageByCategory","suggestedCollection","Info","itemscollection","collectionId","productDetail","productId","setTalla","event","Done","CollectionOverviewWitSpinner","CollectionOverview","CollectionPageWitSpinner","CollectionPage","ProductDetailWitSpinner","ProductDetail","tagid","render","addItem","clearItem","cartItem","totalprice","avatar","secondary","main","SignInComponent","password","setUser","autoComplete","autoFocus","FormControlLabel","control","Checkbox","signInWithEmailAndPassword","username","href","SignUp","repassword","userRegister","setUserRegister","handleSignIn","createUserWithEmailAndPassword","isAdmin","tienda","alert","justify","footer","Footer","Facebook","Instagram","setCurrentUser","onAuthStateChanged","onSnapshot","docSnapshot","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d1d7789.chunk.js","sourcesContent":["export const userActionTypes = {\r\n    SET_CURRENT_USER : 'SET_CURRENT_USER'\r\n}","import {userActionTypes } from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer = ( state = INITIAL_STATE , action ) => {\r\n    switch (action.type) {\r\n        case userActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","const cartTypes = {\r\n    TOGGLE_CART: 'TOGGLE_CART',\r\n    ADDITEMS_TO_CART: 'ADDITEMS_TO_CART' ,\r\n    CLEAR_ITEM : 'CLEAR_ITEM',\r\n    REMOVE_ITEM : 'REMOVE_ITEM'\r\n}\r\n\r\nexport default cartTypes;","export const addUniqueitemTocart = (cartitems, newItem) => {\r\n\r\n\r\n    const itemExist = cartitems.find(item => item.id === newItem.id);\r\n\r\n    if (itemExist) {\r\n        return cartitems.map(item => item.id === itemExist.id ? { ...item, quantity: item.quantity + 1 } : item)\r\n    }\r\n\r\n    return [...cartitems, {...newItem, quantity: 1}]\r\n\r\n}\r\n\r\n\r\nexport const clearItemfromCart = (items, itemtoRemove) => {\r\n\r\n    if (itemtoRemove.quantity === 1) {\r\n        return items.filter((item) => item.id !== itemtoRemove.id);\r\n    } else {\r\n        return items.map((item) => item.id === itemtoRemove.id ? { ...item, quantity: item.quantity - 1 } : item)\r\n\r\n    }\r\n\r\n}","import CartType from './cart.types'\r\nimport { addUniqueitemTocart, clearItemfromCart } from './car-utils';\r\n\r\nconst INITIAL_SATE = {\r\n    hidden: true,\r\n    cartitems: []\r\n}\r\n\r\nconst CartReducer = (state = INITIAL_SATE, action) => {\r\n    switch (action.type) {\r\n        case CartType.TOGGLE_CART:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            }\r\n        case CartType.ADDITEMS_TO_CART:\r\n\r\n            return {\r\n                ...state,\r\n                cartitems: addUniqueitemTocart(state.cartitems, action.payload)\r\n            }\r\n        case CartType.CLEAR_ITEM:\r\n            return {\r\n                ...state,\r\n                cartitems: state.cartitems.filter((item) => item.id !== action.payload.id)\r\n            }\r\n        case CartType.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartitems :  clearItemfromCart(state.cartitems, action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CartReducer","const direcTypes = {\r\n    LOAD_CATEGORY_CLOTHES : 'LOAD_CATEGORY_CLOTHES',\r\n    LOAD_NEW_COLLECTION : 'LOAD_NEW_COLLECTION'\r\n}\r\n\r\nexport default direcTypes;","import directoryTypes from './directory.types';\r\n\r\nconst INITIAL_STATE = {\r\n    DirectoryData: '',\r\n    newCollection: []\r\n}\r\n\r\nconst directoryReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case directoryTypes.LOAD_CATEGORY_CLOTHES:\r\n            return {\r\n                ...state,\r\n                DirectoryData: action.payload\r\n            }\r\n        case directoryTypes.LOAD_NEW_COLLECTION:\r\n            return {\r\n                ...state,\r\n                newCollection: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default directoryReducer;","const SHOP_TYPES = {\r\n    FETCHING_COLLECIONS_START : 'FETCHING_COLLECION_START',\r\n    FETCHING_COLLECTIONS_SUCCESS : 'FETCHING_COLLECTIONS_SUCCESS',\r\n    FETCHING_COLLECTIONS_FAILED : 'FETCHING_COLLECTIONS_FAILED'\r\n}\r\n\r\nexport default SHOP_TYPES;","import SHOPTYPES from './shop.types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    dataShop: [],\r\n    isFetching: true,\r\n    errorMessage: ''\r\n\r\n}\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SHOPTYPES.FETCHING_COLLECIONS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case SHOPTYPES.FETCHING_COLLECTIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                dataShop: action.payload\r\n            }\r\n        case SHOPTYPES.FETCHING_COLLECTIONS_FAILED:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default shopReducer;","const PRODUCT_TYPES = {\r\n    FETCHING_PRODUCTS_START : 'FETCHING_PRODUCTS_START',\r\n    FETCHING_PRODUCTS_SUCCESS: 'FETCHING_PRODUCTS_SUCCESS',\r\n    FETCHING_PRODUCTS_FAILED : 'FETCHING_PRODUCTS_FAILED',\r\n    UPLOADING_PRODUCTS_START : 'UPLOADING_PRODUCTS_START',\r\n    UPLOADING_PRODUCTS_SUCCESS : 'UPLOADING_PRODUCTS_SUCCESS',\r\n    UPLOADING_PRODUCTS_FAILED : 'UPLOADING_PRODUCTS_FAILED',\r\n\r\n}\r\n\r\nexport default PRODUCT_TYPES;\r\n","import PRODUCT_TYPE from './product.type';\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    isUploading: false,\r\n    errorUpload: \"\",\r\n    products: []\r\n}\r\n\r\nconst productReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TYPE.FETCHING_PRODUCTS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case PRODUCT_TYPE.FETCHING_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                products: action.payload\r\n            }\r\n        case PRODUCT_TYPE.UPLOADING_PRODUCTS_START:\r\n            return {\r\n                ...state,\r\n                isUploading: true\r\n            }\r\n        case PRODUCT_TYPE.UPLOADING_PRODUCTS_FAILED:\r\n            return {\r\n                ...state,\r\n                errorUpload: action.payload\r\n            }\r\n        case PRODUCT_TYPE.UPLOADING_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isUploading: false\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default productReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport cartReducer from './Cart/cart.reducer';\r\nimport directoryReducer from './directory/directory.reducer';\r\nimport shopReducer from './shop/shop.reducer';\r\nimport productReducer from './Admin/Products/product.reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['cart']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer,\r\n    directory: directoryReducer,\r\n    shop: shopReducer,\r\n    admin: productReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\n\r\nconst middleware = [logger , thunk];\r\n\r\n// const store = createStore(rootReducer , applyMiddleware(...middleware));\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(...middleware));\r\nexport let persistor = persistStore(store)\r\n\r\n// export default {\r\n//     store,\r\n//     persistor\r\n// }\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDE4m7rjsqUnslU7o8_YMNuJuJ9E5vIEYQ\",\r\n    authDomain: \"lulustore-ed754.firebaseapp.com\",\r\n    databaseURL: \"https://lulustore-ed754.firebaseio.com\",\r\n    projectId: \"lulustore-ed754\",\r\n    storageBucket: \"lulustore-ed754.appspot.com\",\r\n    messagingSenderId: \"326764885111\",\r\n    appId: \"1:326764885111:web:ad153d1ecd517772e94272\",\r\n    measurementId: \"G-V0SETSRG6J\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider).then().catch(error => {\r\n    console.log(error);\r\n});\r\n\r\n\r\nexport const createDocumentUserDb = async (userAuth, otherProperties) => {\r\n    if (!userAuth) return;\r\n    console.log(userAuth.id);\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapshot = await userRef.get();\r\n    // console.log({snapshot});\r\n\r\n    if (!snapshot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const date = new Date();\r\n        await userRef.set({\r\n            displayName,\r\n            email,\r\n            date,\r\n            ...otherProperties\r\n        })\r\n    }\r\n\r\n    return userRef;\r\n}\r\n\r\nexport const createCollectionAndDocuments = async (collectionKey, documentsToAdd) => {\r\n    let batch = firestore.batch();\r\n\r\n    documentsToAdd.forEach(doc => {\r\n        const collectionKeyRef = firestore.collection('collections').doc('AMZYPUVf4xfQdP239Z1s')\r\n            .collection('productos').doc(doc.id).collection('items');\r\n\r\n        doc.items.forEach(item => {\r\n            const newDocRef = collectionKeyRef.doc();\r\n            batch.set(newDocRef, item);\r\n        })\r\n\r\n    })\r\n\r\n    return await batch.commit();\r\n}\r\n\r\nexport const convertCollectionsToObjects = (collection) => {\r\n    const convertedDataArray = collection.docs.map(document => {\r\n        const { category } = document.data();\r\n\r\n        return {\r\n            id: document.id,\r\n            category\r\n            // routeName: encodeURI(title.toLowerCase())\r\n        }\r\n    });\r\n\r\n    const convertedDataObjects = convertedDataArray.reduce((acumulator, item) => {\r\n        acumulator[item.category] = item;\r\n        return acumulator;\r\n    }, {})\r\n\r\n    return convertedDataObjects;\r\n}\r\n\r\n\r\nexport const uploadProductDB = async (document, product, items) => {\r\n\r\n    let itemTotal = 0\r\n    if (document.data().categories.hasOwnProperty(product.category))\r\n        itemTotal = Object.keys(document.data().categories[product.category]).length;\r\n\r\n    let objItems = {};\r\n\r\n    console.log(items);\r\n    items.forEach((item, i) => {\r\n        objItems[`item_${itemTotal}`] = { ...item, createdt: new Date() };\r\n        itemTotal++\r\n    })\r\n\r\n    const result = await document.ref.set({\r\n        categories: {\r\n            [product.category.toLowerCase()]: objItems\r\n        }\r\n    }, { merge: true });\r\n\r\n    return result;\r\n}\r\n\r\nexport const uploadImages = async (items, category , genre) => {\r\n    console.log(items);\r\n\r\n    try {\r\n        const promisesItem = items.map(item => (\r\n            item.image.map(image => {\r\n                const uploadImage = storage.ref(`images-lulu/${genre}/${category}/${item.name}`).child(image.name).put(image);\r\n                uploadImage.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                    snapshot => {\r\n                        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        console.log('Upload is ' + progress + '% done');\r\n                    },\r\n                    error => console.log(error)\r\n                );\r\n                return uploadImage;\r\n            })\r\n        ))\r\n        console.log(promisesItem);\r\n        for (let index = 0; index < promisesItem.length; index++) {\r\n            // console.log(\"loop\", promisesItem[index]);\r\n            const resultImages = await Promise.all(promisesItem[index])\r\n            const resultUrlImages = await Promise.all(resultImages.map(snapshot => snapshot.ref.getDownloadURL()))\r\n            // console.log(resultUrlImages);\r\n            items[index].image = resultUrlImages;\r\n            // console.log(\"ciclo\");\r\n        }\r\n        return [...items]\r\n\r\n    } catch (error) {\r\n        console.log(\"Error Uploading Images \", error);\r\n    }\r\n}\r\n\r\n\r\n// export const addNewItems = (productRef, document , category , items) => {\r\n\r\n//     const itemsSavedObjetc = document.data().categories[category];\r\n//     let itemTotal = Object.keys(document.data().categories[category]).length;\r\n\r\n//     console.log(items);\r\n\r\n//     let objItems= {};\r\n\r\n//     console.log(items);\r\n//     items.forEach( item => {\r\n//         objItems[`item_${itemTotal}`] = {...item , createdt : new Date()};\r\n//         itemTotal++\r\n//     })\r\n\r\n//     productRef.update({\r\n//         [`categories.${category}`] : {...itemsSavedObjetc , ...objItems}\r\n//     });\r\n// }\r\n\r\nexport const updateItem = (docRef, category, itemKey , editedItem) => {\r\n    console.log(editedItem);\r\n    docRef.update({\r\n        [`categories.${category}.${itemKey}`]: editedItem\r\n    });\r\n}\r\n\r\nexport const removeItem = (docRef, category, itemKey) => {\r\n\r\n    docRef.update({\r\n        [`categories.${category}.${itemKey}`]: firebase.firestore.FieldValue.delete()\r\n    });\r\n}","import { createSelector} from 'reselect';\r\n\r\nconst selectUser = state => state.user;\r\n\r\nexport const currentUserSelector = createSelector(\r\n    [selectUser],\r\n    user => user.currentUser\r\n)","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { auth } from '../../../FireBase/FireBaseUtil';\r\nimport { connect } from 'react-redux';\r\nimport { currentUserSelector } from '../../../Redux/user/user-selectors';\r\nimport clsx from 'clsx'\r\n\r\nimport {Menu as MenuIcon} from '@material-ui/icons'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Link,\r\n    makeStyles,\r\n    Button,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nconst drawerWidth = 200;\r\n\r\n// import logo from \"./lulu.png\";\r\nconst useStyle = makeStyles( (theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n      },\r\n    link: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst NavAdmin = ({ currentUser , open , handleDrawerOpen }) => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"default\"\r\n            // className={classes.appBar}\r\n        className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n        })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    // className={classes.menuButton}\r\n                className={clsx(classes.menuButton, {\r\n                    [classes.hide]: open,\r\n                })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n\r\n                <Link className={classes.link} component={RouterLink} to=\"/\"> LULU</Link>\r\n                {/* <Link className={classes.link} component={RouterLink} to=\"/producto\"> Productos</Link> */}\r\n                {/* <Link className={classes.link} component={RouterLink} to=\"/prendas\"> Prendas</Link> */}\r\n\r\n                {\r\n                    currentUser ? (\r\n                        <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={() => auth.signOut()}>\r\n                            Cerrar Sesion\r\n                        </Button>\r\n                    )\r\n                        : (\r\n                            <Link component={RouterLink} to=\"/signin\"> Iniciar Sesion</Link>\r\n                        )\r\n                }\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n    currentUser: currentUserSelector(state)\r\n})\r\n\r\n\r\nexport default connect(mapStatetoProps)(NavAdmin);","import PRODUCT_TYPE from './product.type';\r\nimport { firestore, removeItem, uploadImages  } from '../../../FireBase/FireBaseUtil';\r\n\r\nconst fetchingProductsStart = () => ({\r\n    type: PRODUCT_TYPE.FETCHING_PRODUCTS_START\r\n});\r\n\r\nconst fetchingProductsSuccess = (products) => ({\r\n    type: PRODUCT_TYPE.FETCHING_PRODUCTS_SUCCESS,\r\n    payload: products\r\n});\r\n\r\n\r\nexport const uploadProductsStart = () => ({\r\n    type: PRODUCT_TYPE.UPLOADING_PRODUCTS_START\r\n});\r\n\r\n\r\nexport const uploadProductsSuccess = () => ({\r\n    type: PRODUCT_TYPE.UPLOADING_PRODUCTS_SUCCESS\r\n});\r\n\r\n\r\nexport const fetchingProductsAsync = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchingProductsStart());\r\n        const collectionsRef = firestore.collection('collections');\r\n        collectionsRef.get().then((snapshot) => {\r\n\r\n            const productValues = snapshot.docs.map(document => ({ id: document.id, ...document.data() }))\r\n            dispatch(fetchingProductsSuccess(productValues));\r\n\r\n            // const valueArray = snapshot.docs.map(async (document) => {\r\n            //     let   collection = { id: document.id, ...document.data() }\r\n            //     console.log(collection);\r\n\r\n            //     const productos = await document.ref.collection('productos').get()\r\n            //     collection.productos = productos.docs.map(producto => ({ id: producto.id, ...producto.data() }))\r\n            //     return collection;\r\n            // })\r\n        })\r\n        // .then(response => {\r\n\r\n        //     Promise.all(response).then(res => {\r\n        //         dispatch(fetchingProductsSuccess([...res]));\r\n        //     })\r\n        // })\r\n    }\r\n}\r\n\r\n// export const addNewItemsAsync = ({ idcollection, category, items }) => {\r\n//     return (dispatch) => {\r\n//         dispatch(uploadProductsStart());\r\n//         // console.log(product);\r\n\r\n//         // const productRef = firestore.collection('collections').doc(idcollection).collection('productos').doc(productoid)\r\n//         const productRef = firestore.collection('collections').doc(idcollection)\r\n\r\n//         productRef.get().then(async (document) => {\r\n//             console.log(document.exists);\r\n\r\n//             if (document.exists) {\r\n//                 const itemsImgLoaded = await uploadImages(items)\r\n//                 addNewItems(productRef, document,  category ,  itemsImgLoaded)\r\n//                 dispatch(uploadProductsSuccess());\r\n\r\n//             } else\r\n//                 console.log(\"no exist document\");\r\n\r\n//         })\r\n\r\n\r\n//     }\r\n// }\r\n\r\n// export const addCategory = ({ idcollection, category, items }) => {\r\n//     return (dispatch) => {\r\n//         dispatch(uploadProductsStart());\r\n\r\n//         const productRef = firestore.collection('collections').doc(idcollection)\r\n//         // console.log(items);\r\n\r\n//         productRef.get().then(async (snapshot) => {\r\n//             console.log(snapshot.exists);\r\n\r\n//             if (snapshot.exists) {\r\n//                 console.log(\"Existe\");\r\n//                 const itemsImgLoaded = await uploadImages(items)\r\n//                 console.log(itemsImgLoaded);\r\n//                 addCategoryDoc(productRef, category, itemsImgLoaded)\r\n//                 dispatch(uploadProductsSuccess());\r\n\r\n//             }\r\n//         })\r\n\r\n//     }\r\n// }\r\n\r\nexport const removeItemsAsync = ({ idcollection, productoid }, item) => {\r\n    return (dispatch) => {\r\n        const productRef = firestore.collection('collections').doc(idcollection).collection('productos').doc(productoid)\r\n        productRef.get().then(async (snapshot) => {\r\n            console.log(snapshot.exists);\r\n\r\n            if (snapshot.exists) {\r\n                removeItem(productRef, snapshot.data().items, item);\r\n                dispatch(fetchingProductsAsync())\r\n            } else\r\n                console.log(\"no exist document\");\r\n\r\n        })\r\n\r\n    }\r\n}\r\n","import { createSelector } from 'reselect'\r\n\r\nconst adminData = state => state.admin;\r\n\r\n\r\nexport const productSelector = createSelector(\r\n    [adminData],\r\n    adminData => {\r\n        console.log(adminData.products);\r\n        const dataItems = [];\r\n        adminData.products.forEach((collection, index) => {\r\n            Object.keys(collection.categories).forEach(categoryKey => {\r\n                Object.keys(collection.categories[categoryKey]).forEach(itemKey => {\r\n\r\n                    dataItems.push({ ...collection.categories[categoryKey][itemKey], \r\n                                    id: collection.id, \r\n                                    genre: collection.genre,\r\n                                    itemkey: itemKey,\r\n                                    category : categoryKey })\r\n                })\r\n            })\r\n        })\r\n        return dataItems;\r\n    }\r\n\r\n)\r\n\r\nexport const isFetchSelector = createSelector(\r\n    [adminData],\r\n    adminData => adminData.isFetching\r\n)\r\n\r\nexport const isUploadinSelector = createSelector(\r\n    [adminData],\r\n    adminData => adminData.isUploading\r\n)","import React, { useState, useEffect } from 'react';\r\n// import { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { uploadImages, uploadProductDB, firestore } from '../../../FireBase/FireBaseUtil';\r\nimport { isUploadinSelector } from \"../../../Redux/Admin/Products/product.selectors\";\r\nimport { uploadProductsStart, uploadProductsSuccess } from '../../../Redux/Admin/Products/product.actions';\r\n\r\nimport { CloudUpload } from '@material-ui/icons';\r\nimport {\r\n    CircularProgress,\r\n    makeStyles,\r\n    useTheme,\r\n    Container,\r\n    Button,\r\n    Typography,\r\n    CssBaseline,\r\n    Grid,\r\n    TextField,\r\n    Chip,\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Input\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n\r\nconst CreateProduct = ({ uploadStart, uploadSuccess, isUploading, handleClose }) => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [product, setProduct] = useState({ brand: '', category: '', genre: '', itemsQuantity: 1 })\r\n    let [items, setItems] = useState([{ image: [], name: '', price: 0, detail: '', tallas: [] }])\r\n    let [itemschips, setItemsChip] = useState([{ chips: [] }])\r\n    const [categories, setCategories] = useState([]);\r\n    const [tallas, setTallas] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        // if (productEdit.category) {\r\n        //     console.log(\"enter\" , productEdit.category);\r\n        //     const prendasRef = firestore.collection('genre').doc(productEdit.genre)\r\n        //     prendasRef.get().then(doc => {\r\n        //         const { prendas } = doc.data();\r\n        //         const valuesPrendas = Object.keys(prendas).map(prenda =>\r\n        //             ({ name: prendas[prenda].name.toLowerCase(), talla: prendas[prenda].talla })\r\n        //         )\r\n        //         // console.log(valuesPrendas);\r\n        //         setCategories(valuesPrendas)\r\n        //         const categoryObjectSelected = valuesPrendas.find(category => category.name === productEdit.category)\r\n        //         setTallas(categoryObjectSelected.talla)\r\n        //     })\r\n\r\n        // } else\r\n        //     fetchCategoriesByGenre(productEdit.genre)\r\n\r\n\r\n    }, [])\r\n\r\n    const handleInputs = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        if (name === 'itemsQuantity') {\r\n            items = []\r\n            itemschips = []\r\n            for (let index = 0; index < value; index++) {\r\n                items.push({ id: index, image: [], name: '', price: 0, detail: '', tallas: [] })\r\n                itemschips.push({ chips: [] })\r\n            }\r\n            setItems([...items])\r\n            setItemsChip([...itemschips]);\r\n\r\n        } else\r\n            setProduct({ ...product, [name]: value });\r\n    }\r\n\r\n    const handleSelectGenre = (e) => {\r\n        const { name, value } = e.target;\r\n        // fetchCategoriesByGenre(value)\r\n        const prendasRef = firestore.collection('genre').doc(value)\r\n        prendasRef.get().then(doc => {\r\n            const { prendas } = doc.data();\r\n            const valuesPrendas = Object.keys(prendas).map(prenda =>\r\n                ({ name: prendas[prenda].name, talla: prendas[prenda].talla })\r\n            )\r\n\r\n            console.log(valuesPrendas);\r\n\r\n            setCategories(valuesPrendas)\r\n\r\n        })\r\n        setProduct({ ...product, [name]: value });\r\n    }\r\n\r\n    const handleSelectCategory = (e) => {\r\n        const { name, value } = e.target;\r\n        const categoryObjectSelected = categories.find(category => category.name.toLowerCase() === value)\r\n        console.log(categoryObjectSelected);\r\n        setTallas(categoryObjectSelected.talla)\r\n        setProduct({ ...product, [name]: value });\r\n\r\n    }\r\n\r\n    const handleItems = (e, indexChange) => {\r\n        const { name, value } = e.target;\r\n\r\n        let objectChanged = { ...items[indexChange] };\r\n        let objectItemChip = { ...itemschips[indexChange] };\r\n\r\n        if (name === 'image') {\r\n            console.log(e.target.files);\r\n            if (e.target.files.length > 0) {\r\n                for (let index = 0; index < e.target.files.length; index++) {\r\n                    objectChanged['image'].push(e.target.files[index]); //[...objectChanged.image , e.target.files[0]] ;\r\n                    objectItemChip['chips'].push(e.target.files[index].name);\r\n                }\r\n                items[indexChange] = objectChanged;\r\n                itemschips[indexChange] = objectItemChip;\r\n                setItems([...items])\r\n                setItemsChip([...itemschips]);\r\n            }\r\n        } else {\r\n            objectChanged[name] = value;\r\n            items[indexChange] = objectChanged;\r\n            setItems([...items])\r\n        }\r\n        console.log({ itemschips });\r\n    }\r\n\r\n    // think later if we can avoid reading the document to insert \r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        uploadStart()\r\n        console.log({ product });\r\n        console.log({ items });\r\n        const collectionRef = firestore.collection('collections').where('genre', '==', product.genre)\r\n            .where('brand', '==', product.brand)\r\n\r\n        collectionRef.get().then((snapshot) => {\r\n            snapshot.docs.forEach(async document => {\r\n                if (document.exists) {\r\n                    // const DocData = { id: document.id, ...document.data() }\r\n                    const uploadedItemsImages = await uploadImages(items, product.category , product.genre);\r\n                    console.log(uploadedItemsImages);\r\n                    const result = await uploadProductDB(document, product, uploadedItemsImages);\r\n                    console.log(result);\r\n                    uploadSuccess()\r\n                    handleClose()\r\n                } else {\r\n                    console.log(\"No Brand || No Genre\");\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // const handleAddNewItems = async (e) => {\r\n    //     e.preventDefault();\r\n    //     if (productEdit.category) {\r\n    //         addNewItems({ ...productEdit, items })\r\n    //         handleCurrentPage(\"home\")\r\n    //     } else {\r\n    //         // const uploadedItemsImages = await uploadImages(items);\r\n    //         addNewCategory({ idcollection: productEdit.idcollection, category: product.category, items })\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    const handleDeleteChipsImages = (e, indexKey) => {\r\n        console.log(\"deleting\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Registro de Productos\r\n          </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id={`select-genre`}> Genero</InputLabel>\r\n                                    <Select\r\n                                        labelId={`select-genre`}\r\n                                        id={`genre`}\r\n                                        value={product.genre}\r\n                                        name=\"genre\"\r\n                                        onChange={handleSelectGenre}\r\n                                    // defaultValue={productEdit ? productEdit.genre : null}\r\n                                    >\r\n\r\n                                        <MenuItem value=\"hombre\">Hombre</MenuItem>\r\n                                        <MenuItem value=\"mujer\">Mujer</MenuItem>\r\n\r\n                                        {/* {geners.map((genre, i) => (\r\n                                            <MenuItem key={i} value={genre.id}>{genre.value}</MenuItem>\r\n                                        ))} */}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id={`select-category`}> Cateogria</InputLabel>\r\n                                    <Select\r\n                                        labelId={`select-category`}\r\n                                        id={`category`}\r\n                                        // value={product.category}\r\n                                        value={product.category}\r\n                                        name=\"category\"\r\n                                        onChange={handleSelectCategory}\r\n                                    >\r\n                                        {categories.map((category, i) => (\r\n                                            <MenuItem key={i} value={category.name.toLowerCase()}>{category.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    onChange={handleInputs}\r\n                                    // autoComplete=\"fname\"\r\n                                    name=\"brand\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"brand\"\r\n                                    label=\"Tienda\"\r\n                                    value={product.brand}\r\n                                // defaultValue={productEdit ? productEdit.brand : null}\r\n\r\n                                // autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Typography component=\"h3\" variant=\"h5\">\r\n                                    Items\r\n                            </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    onChange={handleInputs}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    defaultValue={product.itemsQuantity}\r\n                                    id=\"itemsQuantity\"\r\n                                    label=\"Cantidad\"\r\n                                    name=\"itemsQuantity\"\r\n                                // autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n                <div className={classes.paper}>\r\n                    {items.map((item, index) => {\r\n                        return (\r\n                            <Grid key={index} container spacing={2}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <TextField\r\n                                        onChange={(e) => handleItems(e, index)}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id={`name_${index}`}\r\n                                        label=\"Nombre\"\r\n                                        name=\"name\"\r\n                                    // autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <TextField\r\n                                        onChange={(e) => handleItems(e, index)}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id={`detail_${index}`}\r\n                                        label=\"Descripcion\"\r\n                                        name=\"detail\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <Box>\r\n                                        <input\r\n                                            accept=\"image/*\"\r\n                                            className={classes.input}\r\n                                            id={`contained-button-file_${index}`}\r\n                                            onChange={(e) => handleItems(e, index)}\r\n                                            name=\"image\"\r\n                                            type=\"file\"\r\n                                            multiple\r\n                                        />\r\n                                        <label htmlFor={`contained-button-file_${index}`}>\r\n                                            <Button variant=\"outlined\" size=\"small\" color=\"primary\"\r\n                                                startIcon={<CloudUpload />}\r\n                                                component=\"span\">\r\n                                                Imagenes\r\n                                             </Button>\r\n                                        </label>\r\n                                        <Box display=\"flex\" flexWrap=\"wrap\">\r\n                                            {itemschips[index]['chips'].map((name, i) => (\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    key={i}\r\n                                                    label={name}\r\n                                                    onDelete={(e) => handleDeleteChipsImages(e, index)}\r\n                                                />\r\n                                            ))\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id={`select-talla_${index}`}>Talla</InputLabel>\r\n                                        <Select\r\n                                            labelId={`select-talla_${index}`}\r\n                                            id={`tallas_${index}`}\r\n                                            name=\"tallas\"\r\n                                            multiple\r\n                                            value={item.tallas}\r\n                                            onChange={(e) => handleItems(e, index)}\r\n                                            input={<Input id={`select-talla_${index}`} />}\r\n                                            renderValue={(selected) => (\r\n                                                <div className={classes.chips}>\r\n                                                    {selected.map((value) => (\r\n                                                        <Chip size=\"small\" key={value} label={value} className={classes.chip} />\r\n                                                    ))}\r\n                                                </div>\r\n                                            )}\r\n                                            MenuProps={MenuProps}\r\n                                        >\r\n                                            {tallas.map((talla) => (\r\n                                                <MenuItem key={talla} value={talla} style={getStyles(talla, talla, theme)}>\r\n                                                    {talla}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2}>\r\n                                    <TextField\r\n                                        onChange={(e) => handleItems(e, index)}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id={`price_${index}`}\r\n                                        label=\"Precio\"\r\n                                        name=\"price\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                    {isUploading ? (\r\n                        <div className={classes.root}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    )\r\n                        : null\r\n                    }\r\n                    <Button\r\n                        onClick={handleRegister}\r\n                        // fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Registrar Productos\r\n                            </Button>\r\n                    {/* {productEdit ? (\r\n                        <Button\r\n                            onClick={handleAddNewItems}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Agregar Items\r\n                        </Button>\r\n                    ) : (\r\n                            <Button\r\n                                onClick={handleRegister}\r\n                                // fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Registrar Productos\r\n                            </Button>\r\n                        )\r\n\r\n                    } */}\r\n                    {/* <Button\r\n                        onClick={backStep}\r\n                        // fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Regresar\r\n                     </Button> */}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    // addNewItems: (product) => dispatch(addNewItemsAsync(product)),\r\n    // addNewCategory: (product) => dispatch(addCategory(product)),\r\n    uploadStart: () => dispatch(uploadProductsStart()),\r\n    uploadSuccess: () => dispatch(uploadProductsSuccess())\r\n\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isUploading: isUploadinSelector(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(CreateProduct);\r\n","import React from 'react'\r\n\r\n//components\r\nimport CreateProduct from './CreateProduct.component'\r\nimport {\r\n    makeStyles,\r\n    DialogContent,\r\n    Dialog,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    DialogActions,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\nconst ModalDialogAdd = ({ open, handleClose }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">Agregar Productos</DialogTitle>\r\n                <DialogContent>\r\n                    <CreateProduct handleClose={handleClose} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                        Cerrar\r\n            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ModalDialogAdd\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestore, updateItem, uploadImages } from '../../../FireBase/FireBaseUtil'\r\nimport { uploadProductsStart, uploadProductsSuccess } from '../../../Redux/Admin/Products/product.actions'\r\nimport { isUploadinSelector } from '../../../Redux/Admin/Products/product.selectors'\r\n\r\nimport {\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    Input,\r\n    makeStyles,\r\n    Chip,\r\n    FormControl,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    useTheme,\r\n    Button,\r\n    Box,\r\n    GridList,\r\n    GridListTile,\r\n    GridListTileBar,\r\n    IconButton,\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    Delete as DeleteIcon,\r\n    CloudUpload as CloudUploadIcon\r\n} from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    circleprogress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    gridList: {\r\n        width: 500,\r\n        height: 'auto',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n\r\nconst EditProduct = ({ selectedItem, handleClose, isUploading, updateStart, updateSuccess }) => {\r\n    const classes = useStyles()\r\n    const { name, price, detail, createdt, tallas, image } = selectedItem;\r\n    const theme = useTheme();\r\n    const [item, setItem] = useState({ name: '', price: '', detail: '', tallas: [], image: [], createdt: '' })\r\n    let [imagesChips, setimagesChips] = useState([])\r\n    const addedImages = useRef([]);\r\n\r\n    useEffect(() => {\r\n\r\n        setItem({ ...selectedItem })\r\n    }, [])\r\n\r\n    const handleItem = (e) => {\r\n\r\n        const { name, value } = e.target;\r\n        console.log(name);\r\n        console.log(value);\r\n        if (name === 'image') {\r\n            // console.log(e.target.files);\r\n            if (e.target.files.length > 0) {\r\n                for (let index = 0; index < e.target.files.length; index++) {\r\n                    addedImages.current.push(e.target.files[index]);\r\n                    // console.log(addedImages);\r\n                    imagesChips.push(e.target.files[index].name);\r\n                }\r\n                setimagesChips([...imagesChips]);\r\n            }\r\n        } else {\r\n            setItem({ ...item, [name]: value })\r\n        }\r\n\r\n        // console.log(item);\r\n    }\r\n\r\n    const handleDeleteImages = (e, index) => {\r\n        console.log(item);\r\n        console.log(index);\r\n        item.image.splice(index, 1);\r\n        setItem({ ...item })\r\n\r\n    }\r\n    const handleSave = async () => {\r\n        updateStart()\r\n        const docRef = firestore.collection('collections').doc(selectedItem.id)\r\n        console.log(addedImages);\r\n        try {\r\n            const uploadedImages = await uploadImages([{ image: addedImages.current }], item.category)\r\n            image.push(...uploadedImages[0].image)\r\n            console.log({ image });\r\n            updateItem(docRef, item.category, item.itemkey, { name, detail, image, price, tallas, createdt })\r\n            updateSuccess()\r\n            handleClose();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    console.log({ isUploading });\r\n    return (\r\n        <Grid spacing={2} container>\r\n            {/* <form noValidate> */}\r\n            <Grid xs={12} sm={2} item>\r\n                <TextField id=\"name\" name='name' label=\"Nombre\" onChange={handleItem}\r\n                    defaultValue={name} />\r\n            </Grid>\r\n            <Grid xs={12} sm={4} item>\r\n                <TextField id=\"detail\" name='detail' label=\"Detail\" fullWidth onChange={handleItem}\r\n                    defaultValue={detail} />\r\n            </Grid>\r\n            <Grid xs={12} sm={2} item>\r\n                <TextField id=\"price\" name='price' label=\"price\" onChange={handleItem}\r\n                    defaultValue={price} />\r\n            </Grid>\r\n            <Grid xs={12} sm={4} item>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id={`select-talla`}>Tallas</InputLabel>\r\n                    <Select\r\n                        labelId={`select-talla`}\r\n                        id={`tallas`}\r\n                        name=\"tallas\"\r\n                        multiple\r\n                        value={item.tallas}\r\n                        onChange={(e) => handleItem(e)}\r\n                        input={<Input id={`select-talla`} />}\r\n                        renderValue={(selected) => (\r\n                            <div className={classes.chips}>\r\n                                {selected.map((value) => (\r\n                                    <Chip size=\"small\" key={value} label={value} className={classes.chip} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {tallas.map((talla) => (\r\n                            <MenuItem key={talla} value={talla} style={getStyles(talla, talla, theme)}>\r\n                                {talla}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <Box className={classes.root}>\r\n                    <GridList cellHeight={160} className={classes.gridList} cols={2}>\r\n                        {item.image.map((image, index) => (\r\n                            <GridListTile key={index} cols={1}>\r\n                                <img src={image} alt=\"\" />\r\n\r\n                                <GridListTileBar\r\n                                    title=\"\"\r\n                                    subtitle=\"\"\r\n                                    actionIcon={\r\n                                        <IconButton onClick={(e) => handleDeleteImages(e, index)} aria-label={`delete image`} className={classes.icon}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </Box>\r\n            </Grid>\r\n            <Grid xs={12} item>\r\n                <Box>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id={`contained-button-file`}\r\n                        onChange={(e) => handleItem(e)}\r\n                        name=\"image\"\r\n                        type=\"file\"\r\n                        multiple\r\n                    />\r\n                    <label htmlFor={`contained-button-file`}>\r\n                        <Button variant=\"outlined\" size=\"small\" color=\"primary\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            component=\"span\">\r\n                            Imagen\r\n                                             </Button>\r\n                    </label>\r\n                    <Box display=\"flex\" flexWrap=\"wrap\">\r\n                        {imagesChips.map((name, i) => (\r\n                            <Chip\r\n                                size=\"small\"\r\n                                key={i}\r\n                                label={name}\r\n                            // onDelete={(e) => handleDeleteChipsImages(e, index)}\r\n                            />\r\n                        ))\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            {isUploading ? (\r\n                <div className={classes.circleprogress}>\r\n                    <CircularProgress />\r\n                </div>\r\n            )\r\n                : null\r\n            }\r\n\r\n            <Grid xs={12} item>\r\n                <Button\r\n                    onClick={handleSave}\r\n                    // fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                // className={classes.submit}\r\n                >\r\n                    Guardar Cambios\r\n                            </Button>\r\n            </Grid>\r\n            {/* </form> */}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isUploading: isUploadinSelector(state)\r\n})\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    updateStart: () => dispatch(uploadProductsStart()),\r\n    updateSuccess: () => dispatch(uploadProductsSuccess())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToState)(EditProduct)\r\n","import React from 'react'\r\n\r\n//components\r\nimport EditProduct from './EditProduct'\r\n\r\nimport {\r\n    makeStyles,\r\n    DialogContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    Button,\r\n    ListItemAvatar\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\nconst ModalDialogEdit = ({ open, item ,  handleClose }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">Editar Producto</DialogTitle>\r\n                <DialogContent>\r\n                    <EditProduct selectedItem={item} handleClose={handleClose} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                        Cerrar\r\n            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ModalDialogEdit\r\n","import React, { useState } from 'react';\r\n\r\n//firestore\r\nimport { removeItem } from '../../../FireBase/FireBaseUtil'\r\n//components\r\nimport ModalDialogAdd from './ModalDialogAdd'\r\nimport ModalDialogEdit from './ModalDialogEdit'\r\n\r\nimport {\r\n    makeStyles,\r\n    Button,\r\n    Typography,\r\n    Avatar,\r\n    IconButton,\r\n    Grid,\r\n    Box,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TableFooter,\r\n    Paper,\r\n\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Delete as DeleteIcon,\r\n    Edit as EditIcon,\r\n    AddCircle as AddCircleIcon,\r\n} from '@material-ui/icons'\r\nimport { firestore } from '../../../FireBase/FireBaseUtil';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nconst ProductList = ({ products }) => {\r\n    const classes = useStyles();\r\n    console.log(products);\r\n    const [openModalAdd, setOpenModal] = useState(false)\r\n    const [openModalEdit, setOpenModalEdit] = useState({ open: false, item: {} })\r\n\r\n    const handleModalAdd = () => {\r\n        setOpenModal(!openModalAdd);\r\n    }\r\n\r\n    const handleDeleteItem = (item) => {\r\n        console.log(item);\r\n        const docRef = firestore.collection('collections').doc(item.id)\r\n        removeItem(docRef, item.category, item.itemkey);\r\n    }\r\n\r\n    const handleEditItem = (selectedItem) => {\r\n        console.log(selectedItem);\r\n\r\n        setOpenModalEdit({ open: true, item: selectedItem });\r\n    }\r\n\r\n    const handleModalEdit = () => {\r\n        setOpenModalEdit({ open: false, item: {} })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {openModalAdd && <ModalDialogAdd open={openModalAdd} handleClose={handleModalAdd} />}\r\n            {openModalEdit.open && <ModalDialogEdit open={openModalEdit.open}\r\n                item={openModalEdit.item}\r\n                handleClose={handleModalEdit} />}\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Typography component=\"h4\"> Listado de Productos en Stock</Typography>\r\n            </Box>\r\n            <Grid container>\r\n                <Grid xs={12} item>\r\n                    <Button\r\n                        onClick={handleModalAdd}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        endIcon={<AddCircleIcon />}\r\n                    >\r\n                        Agregar\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n\r\n                <Grid xs={12} item>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>IMAGEN</TableCell>\r\n                                    <TableCell align=\"right\">NOMBRE</TableCell>\r\n                                    <TableCell align=\"right\">PRECIO</TableCell>\r\n                                    <TableCell align=\"right\">CATEGORIA</TableCell>\r\n                                    <TableCell align=\"right\">FECHA CREACION</TableCell>\r\n                                    <TableCell align=\"right\">ACCIONES</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {products.map((product , index) => (\r\n                                    <TableRow key={index}>\r\n                                        {/* {console.log(product.createdt.toDate())} */}\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <Avatar\r\n                                                className={classes.large}\r\n                                                alt={product.name}\r\n                                                src={product.image[0]}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{product.name}</TableCell>\r\n                                        <TableCell align=\"right\">{`$${product.price}`}</TableCell>\r\n                                        <TableCell align=\"right\">{product.category}</TableCell>\r\n                                        <TableCell align=\"right\">Working on this cell</TableCell>\r\n                                        <TableCell >\r\n                                            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                                                <IconButton aria-label=\"edit\" onClick={() => handleEditItem(product)}>\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                                <IconButton aria-label=\"delete\" onClick={() => handleDeleteItem(product)}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            {/* <TableFooter>\r\n                                <TableRow>\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                        colSpan={3}\r\n                                        count={rows.length}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={page}\r\n                                        SelectProps={{\r\n                                            inputProps: { 'aria-label': 'rows per page' },\r\n                                            native: true,\r\n                                        }}\r\n                                        onChangePage={handleChangePage}\r\n                                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                        ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter> */}\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div >)\r\n}\r\n\r\nexport default ProductList","import React from 'react';\r\n\r\nimport {\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         '& > * + *': {\r\n//             marginLeft: theme.spacing(2),\r\n//         },\r\n//     },\r\n// }));\r\n\r\n\r\nconst WithSpinner = (WrappedComponent) => {\r\n\r\n    const spinner = ({ isLoading, ...otherProps }) => {\r\n\r\n        return (isLoading ? (\r\n            <div className=\"\">\r\n                <CircularProgress />\r\n            </div>\r\n        ) :\r\n            (\r\n                <WrappedComponent {...otherProps} />\r\n            )\r\n        )\r\n    }\r\n\r\n    return spinner;\r\n}\r\n\r\nexport default WithSpinner;","import React, { useState, useEffect } from 'react';\r\n// import { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchingProductsAsync, removeItemsAsync } from \"../../../Redux/Admin/Products/product.actions\";\r\nimport { productSelector, isFetchSelector } from \"../../../Redux/Admin/Products/product.selectors\";\r\n\r\n// import { storage, uploadProductAndImage } from '../../../FireBase/FireBaseUtil';\r\nimport CreateProduct from './CreateProduct.component';\r\nimport ProductList from './ProductList';\r\nimport WithSpinner from '../../with-spinner/withSpinner';\r\n\r\nimport {\r\n    Container,\r\n    Button,\r\n    Box\r\n} from '@material-ui/core';\r\n\r\n\r\nconst ProductListWithSpinner = WithSpinner(ProductList);\r\n\r\n\r\nconst ProductPage = ({ fetchProductsAsync, products, isFetchingProducts, removeItem }) => {\r\n    const [currentPage, setCurrentPage] = useState(\"home\");\r\n    const [product, setProduct] = useState(null);\r\n\r\n    console.log(products);\r\n    useEffect(() => {\r\n        console.log(\"fetching Products\");\r\n        fetchProductsAsync();\r\n    }, [fetchProductsAsync]);\r\n\r\n\r\n    const handleCurrentPage = (product, pagetogo) => {\r\n        console.log(product);\r\n        setProduct(product)\r\n        setCurrentPage(pagetogo)\r\n    }\r\n\r\n    const handleRemoveItems = (product, item) => {\r\n        console.log(item);\r\n        removeItem(product, item)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {currentPage === 'home' ? (\r\n                <Box>\r\n                    {/* <Container maxWidth=\"sm\">\r\n                        <Button\r\n                            onClick={() => handleCurrentPage(\"\", \"create\")}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Registrar Marca o genero\r\n                  </Button>\r\n                    </Container> */}\r\n                    {/* <Box> */}\r\n                    <ProductListWithSpinner isLoading={isFetchingProducts} products={products}\r\n                        handleCurrentPage={handleCurrentPage}\r\n                        handleRemoveItems={handleRemoveItems}\r\n                    />\r\n                    {/* </Box> */}\r\n                </Box>\r\n            ) :\r\n                <CreateProduct productEdit={product}\r\n                    handleCurrentPage={handleCurrentPage}\r\n                    backStep={() => setCurrentPage(\"home\")} />\r\n\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    fetchProductsAsync: () => dispatch(fetchingProductsAsync()),\r\n    removeItem: (product, item) => dispatch(removeItemsAsync(product, item))\r\n})\r\n\r\nconst mapStatetoProps = state => ({\r\n    products: productSelector(state),\r\n    isFetchingProducts: isFetchSelector(state)\r\n})\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToState)(ProductPage);\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\n\r\n//components\r\nimport NavAdmin from '../NavAdmin/NavAdmin.component'\r\nimport ProductHomePage from '../products/ProductHomePage.component'\r\nimport {\r\n    makeStyles,\r\n    useTheme,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    ListItemIcon,\r\n    List,\r\n    Link\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    ChevronLeft as ChevronLeftIcon,\r\n    ChevronRight as ChevronRightIcon,\r\n    Inbox as InboxIcon,\r\n    Mail as MailIcon\r\n} from '@material-ui/icons'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link as RouterLink,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nconst drawerWidth = 200;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    }\r\n}))\r\nconst MiniDrawer = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme()\r\n\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <Router basename=\"/luluecommerce\">\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <NavAdmin open={open} handleDrawerOpen={handleDrawerOpen} />\r\n\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    className={clsx(classes.drawer, {\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    })}\r\n                    classes={{\r\n                        paper: clsx({\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        }),\r\n                    }}\r\n                >\r\n\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <Link component={RouterLink} to=\"/producto\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <MailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Productos\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <MailIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Prendas\" />\r\n                        </ListItem>\r\n                    </List>\r\n\r\n                </Drawer>\r\n\r\n                <main className={classes.content}>\r\n                    {/* <div className={classes.toolbar} /> */}\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            Bienvenidos Panel de administracion\r\n                    </Route>\r\n                        <Route path=\"/producto\">\r\n                            <ProductHomePage />\r\n                        </Route>\r\n                        {/* <Route path=\"/prendas\">\r\n                            <ListPrendas />\r\n                        </Route> */}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default MiniDrawer\r\n","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Container,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nconst HandleRegisterPrenda = ({ tallavalues, quantity, prendasitems, setPrendasItems, savePrenda ,\r\n                                setGenre, genre }) => {\r\n\r\n    const handleInputs = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        if (name === 'itemsQuantity') {\r\n            prendasitems = []\r\n            for (let index = 0; index < value; index++) {\r\n                prendasitems.push({ name: '', typetalla: '' })\r\n            }\r\n            setPrendasItems([...prendasitems]);\r\n        }\r\n    }\r\n\r\n    const handleItems = (e, indexChange) => {\r\n        const { name, value } = e.target;\r\n\r\n        let objectChanged = { ...prendasitems[indexChange] };\r\n\r\n        objectChanged[name] = value;\r\n        prendasitems[indexChange] = objectChanged;\r\n        setPrendasItems([...prendasitems])\r\n    }\r\n\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n            <Container maxWidth=\"sm\">\r\n                <Grid container>\r\n                    <Grid xs={12} item>\r\n                        <Typography component=\"h4\"> REGISTRO DE PRENDAS</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-genre\">Seleccion Genero</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-genre\"\r\n                                id=\"genre\"\r\n                                value={genre}\r\n                                name=\"genre\"\r\n                                onChange={(e) => setGenre(e.target.value)}\r\n                            >\r\n                                <MenuItem value=\"mujer\">Mujer</MenuItem>\r\n                                <MenuItem value=\"hombre\">Hombre</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Typography component=\"h3\" variant=\"h5\">\r\n                            Cantidad\r\n                            </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            onChange={handleInputs}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            defaultValue={quantity}\r\n                            id=\"itemsQuantity\"\r\n                            label=\"Cantidad\"\r\n                            name=\"itemsQuantity\" />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container>\r\n\r\n                    {\r\n                        prendasitems.map((item, index) => {\r\n                            console.log(item.typetalla);\r\n                            return (\r\n                                <Box display=\"flex\" key={index} m={2}>\r\n                                    <Grid item xs={6} >\r\n                                        <TextField\r\n                                            onChange={(e) => handleItems(e, index)}\r\n                                            // autoComplete=\"fname\"\r\n                                            name=\"name\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            // defaultValue={productEdit ? productEdit.category : null}\r\n                                            fullWidth\r\n                                            id={`name_${index}`}\r\n                                            label=\"Nombre\"\r\n                                        // autoFocus\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel id={`select-type-talla_${index}`}> Talla</InputLabel>\r\n                                            <Select fullWidth\r\n                                                labelId={`select-type-talla_${index}`}\r\n                                                id={`typetalla_${index}`}\r\n                                                value={item.typetalla}\r\n                                                name=\"typetalla\"\r\n                                                onChange={(e) => handleItems(e, index)}\r\n                                            >\r\n                                                {tallavalues.map((talla, i) => (\r\n                                                    <MenuItem key={i} value={talla.id}>{talla.value}</MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Box>\r\n                            )\r\n\r\n\r\n                        })\r\n                    }\r\n\r\n                    <Grid xs={12} item>\r\n                        <Button\r\n                            onClick={() => savePrenda()}\r\n                            // fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Guardar\r\n                            </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default HandleRegisterPrenda\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const  itemCountSelector = createSelector(\r\n    [selectCart],\r\n    cart => cart.cartitems.reduce((acumulator, currentItem) => acumulator + currentItem.quantity, 0)\r\n)\r\n\r\nexport const  itemTotaValueSelector = createSelector(\r\n    [selectCart],\r\n    cart => cart.cartitems.reduce((acumulator, currentItem) => acumulator + currentItem.quantity * currentItem.price, 0 )\r\n)\r\n\r\nexport const cartitemsSelector = createSelector(\r\n    [selectCart],\r\n    cart => cart.cartitems\r\n)\r\n\r\nexport const hiddeCartSelector = createSelector(\r\n    [selectCart],\r\n    cart => cart.hidden\r\n)","import React, { useState, useEffect } from 'react'\r\n//redux\r\nimport { connect } from 'react-redux'\r\n//actions\r\n\r\n//components\r\nimport HandleRegisterPrenda from './HandleRegisterPrenda'\r\n\r\nimport { firestore } from '../../../FireBase/FireBaseUtil'\r\n\r\n// const HandleGenrePrenda = ({ setStep, setGenre, genre }) => {\r\n\r\n//     return (\r\n//         <Container maxWidth=\"sm\">\r\n//             <Grid container>\r\n//                 <Grid xs={12} item>\r\n//                     <FormControl fullWidth>\r\n//                         <InputLabel id=\"select-genre\">Seleccion Genero</InputLabel>\r\n//                         <Select\r\n//                             labelId=\"select-genre\"\r\n//                             id=\"genre\"\r\n//                             value={genre}\r\n//                             name=\"genre\"\r\n//                             onChange={(e) => setGenre(e.target.value)}\r\n//                         >\r\n//                             <MenuItem value=\"mujer\">Mujer</MenuItem>\r\n//                             <MenuItem value=\"hombre\">Hombre</MenuItem>\r\n//                         </Select>\r\n//                     </FormControl>\r\n//                 </Grid>\r\n//                 <Grid xs={12} item>\r\n//                     <Button\r\n//                         onClick={() => setStep(1)}\r\n//                         // fullWidth\r\n//                         variant=\"contained\"\r\n//                         color=\"primary\"\r\n//                     >\r\n//                         Siguiente\r\n//                             </Button>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Container>\r\n//     )\r\n// }\r\n\r\n\r\nconst CreatePrendas = () => {\r\n    const [step, setSteps] = useState(0);\r\n    const [genre, setGenre] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    let [prendasitems, setPrendasItems] = useState([{ name: '', typetalla: '' }]);\r\n    const [tallas, setTallas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const collectionsRef = firestore.collection('tallas');\r\n        collectionsRef.get().then((snapshot) => {\r\n            const arrayvalues = snapshot.docs.map(doc => ({ id: doc.id, value: doc.data().name }))\r\n            console.log(arrayvalues);\r\n            setTallas(arrayvalues)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const savePrenda = () => {\r\n        console.log(\"Save prenda\");\r\n        const newprendasRef = firestore.collection(\"genre\").doc(genre).collection(\"prendas\");\r\n        let batch = firestore.batch();\r\n        prendasitems.forEach(prenda => {\r\n            const newDocPrendaRef = newprendasRef.doc();\r\n            batch.set(newDocPrendaRef, prenda)\r\n        })\r\n\r\n        batch.commit();\r\n\r\n    }\r\n    // const renderCreatePrendas = () => {\r\n\r\n    //     switch (step) {\r\n    //         case 0:\r\n    //             return <HandleGenrePrenda  setStep={setSteps} />\r\n    //         case 1:\r\n    //             return <HandleRegisterPrenda\r\n    //                 quantity={quantity}\r\n    //                 setQuantity={setQuantity}\r\n    //                 prendasitems={prendasitems}\r\n    //                 setPrendasItems={setPrendasItems}\r\n    //                 tallavalues={tallas}\r\n    //                 savePrenda={savePrenda}\r\n    //                 setGenre={setGenre} \r\n    //                 genre={genre} />\r\n    //         default:\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <HandleRegisterPrenda\r\n            quantity={quantity}\r\n            setQuantity={setQuantity}\r\n            prendasitems={prendasitems}\r\n            setPrendasItems={setPrendasItems}\r\n            tallavalues={tallas}\r\n            savePrenda={savePrenda}\r\n            setGenre={setGenre}\r\n            genre={genre} />\r\n    )\r\n\r\n}\r\n\r\n// const mapDispatchToState = (dispatch) => ({\r\n//     fetchTallas : () => dispatch(fetchingTallasAsync())\r\n// })\r\n\r\nexport default connect(null, null)(CreatePrendas)\r\n","import CartType from './cart.types'\r\n\r\nexport const toggleCart = () => {\r\n    return {\r\n        type : CartType.TOGGLE_CART\r\n    }\r\n}\r\n\r\nexport const addItemsToCart = (item) => {\r\n        return {\r\n            type : CartType.ADDITEMS_TO_CART,\r\n            payload: item\r\n        }\r\n}\r\n\r\nexport const clearItem = (itemToClear) => {\r\n    return {\r\n        type : CartType.CLEAR_ITEM,\r\n        payload: itemToClear\r\n    }\r\n}\r\n\r\nexport const removeItem = (itemToRemove) => {\r\n    return {\r\n        type : CartType.REMOVE_ITEM,\r\n        payload: itemToRemove\r\n    }\r\n}","import React from 'react';\r\nimport './cart-icon.css';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { itemCountSelector } from '../../Redux/Cart/cart-selectors';\r\nimport { toggleCart } from '../../Redux/Cart/cart.action';\r\n// import { ReactComponent as ShopIcon } from '../../assets/images/shopping-bag.svg';\r\n\r\nimport {ShoppingCart} from '@material-ui/icons'\r\nimport {\r\n    IconButton,\r\n    Badge\r\n} from '@material-ui/core';\r\n\r\nconst CartIconComponent = ({ toggleCart, itemCount }) => {\r\n    return (\r\n        <IconButton onClick={toggleCart} aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n            <Badge badgeContent={itemCount} color=\"secondary\">\r\n                <ShoppingCart />\r\n            </Badge>\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nconst mapDispatchToState = dispatch => ({\r\n    toggleCart: () => { dispatch(toggleCart()) }\r\n})\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount: itemCountSelector\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(CartIconComponent);","import React from 'react';\r\nimport './cart-item.styles.css';\r\n\r\nimport { makeStyles, Avatar, Box, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}));\r\n\r\n\r\nconst CardItems = ({ image, name, price, quantity }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n\r\n            <Avatar alt={name} src={image} className={classes.large} />\r\n\r\n            <Typography component=\"h6\">\r\n                {name}\r\n            </Typography>\r\n            <Typography component=\"h6\">\r\n                {`$${price}`}\r\n            </Typography>\r\n            <Typography component=\"h6\">\r\n                {quantity}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardItems;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { cartitemsSelector } from '../../Redux/Cart/cart-selectors';\r\nimport { toggleCart } from '../../Redux/Cart/cart.action';\r\n\r\nimport CartItems from '../cart-items/cart-items.component'\r\n\r\nimport {\r\n    makeStyles,\r\n    Button,\r\n    Box,\r\n    List,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cartdropdown: {\r\n        position: \"absolute\",\r\n        right: 30,\r\n        top: 55,\r\n        bgcolor: theme.palette.common.white,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\nconst CardDropdown = ({ cartitems, history, dispatch }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Box zIndex=\"tooltip\" width={350} bgcolor=\"white\" borderRadius=\"borderRadius\"\r\n            border={1} className={classes.cartdropdown} p={2}>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\" >\r\n                <Typography fon component=\"h5\" className={classes.title}>\r\n                    Image\r\n                </Typography>\r\n                <Typography component=\"h5\" className={classes.title}>\r\n                    Nombre\r\n                </Typography>\r\n                <Typography component=\"h5\" className={classes.title}>\r\n                    precio\r\n                </Typography>\r\n                <Typography component=\"h5\" className={classes.title}>\r\n                    Cant.\r\n                </Typography>\r\n            </Box>\r\n            {\r\n                cartitems.length ? cartitems.map((item, i) => <CartItems key={i} {...item} />)\r\n                    :\r\n                    <span className=\"empty-message\">No hay items</span>\r\n            }\r\n            <Box mt={2}>\r\n                <Button fullWidth variant=\"outlined\" onClick={() => {\r\n                    dispatch(toggleCart());\r\n                    history.push(\"/checkout\");\r\n                }}>Go to Check out</Button>\r\n            </Box>\r\n\r\n        </Box>\r\n        // <div className={classes.cartdropdown}>\r\n        //     {\r\n        //         cartitems.length ? <List className={classes.root}>\r\n        //             {cartitems.map((item, i) => <CartItems key={i} {...item} />)}\r\n        //         </List>\r\n        //             :\r\n        //             <span className=\"empty-message\">No hay items</span>\r\n        //     }\r\n\r\n        //     <Button variant=\"outlined\" onClick={() => {\r\n        //         dispatch(toggleCart());\r\n        //         history.push(\"/checkout\");\r\n        //     }}>Go to Check out</Button>\r\n        // </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cartitems: cartitemsSelector(state)\r\n})\r\nexport default withRouter(connect(mapStateToProps)(CardDropdown));","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { auth } from '../../FireBase/FireBaseUtil';\r\nimport { connect } from 'react-redux';\r\nimport { currentUserSelector } from '../../Redux/user/user-selectors';\r\nimport { hiddeCartSelector } from '../../Redux/Cart/cart-selectors';\r\n\r\nimport CartIconComponent from '../Cart-Icon/car-icon.component';\r\nimport CartDropdown from '../Card-Dropdown/card-dropdown';\r\n\r\nimport {\r\n    Search,\r\n    AccountCircle\r\n} from '@material-ui/icons';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Link,\r\n    makeStyles,\r\n    Button,\r\n    InputBase,\r\n    Typography,\r\n    IconButton,\r\n    Badge,\r\n    Box\r\n} from '@material-ui/core';\r\n\r\n// import logo from \"./lulu.png\";\r\nconst useStyle = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n        marginLeft: theme.spacing(7)\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n            color: theme.palette.common.black\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 1.00),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n    link: {\r\n        marginLeft: theme.spacing(3),\r\n        color: theme.palette.common.black\r\n    }\r\n}));\r\n\r\nconst Nav = ({ currentUser, hidden }) => {\r\n    // console.log({ currentUser, hidden });\r\n    const classes = useStyle();\r\n    return (\r\n        <div >\r\n            <AppBar position=\"fixed\" color=\"inherit\">\r\n                <Toolbar>\r\n                    <Link component={RouterLink} to=\"/\">\r\n                        <Typography className={classes.title} variant=\"h4\" noWrap>\r\n                            LULU\r\n                     </Typography>\r\n                    </Link>\r\n                    <div className={classes.grow}>\r\n                        <Link className={classes.link} component={RouterLink} to=\"/mujer\"> Mujer</Link>\r\n                        <Link className={classes.link} component={RouterLink} to=\"/hombre\"> Hombre</Link>\r\n\r\n                    </div>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <Search />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Buscar…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <CartIconComponent />\r\n                        {hidden ? <CartDropdown /> : null}\r\n\r\n                        {\r\n                            currentUser ? (\r\n                                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={() => auth.signOut()}>\r\n                                    Cerrar Sesion\r\n                                </Button>\r\n                            )\r\n                                : (\r\n                                    <Link component={RouterLink} to=\"/signin\">\r\n                                        {/* <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\"> */}\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            aria-label=\"account of current user\"\r\n                                            // aria-controls={menuId}\r\n                                            aria-haspopup=\"true\"\r\n                                            // onClick={handleProfileMenuOpen}\r\n                                            color=\"inherit\"\r\n                                        >\r\n                                            <AccountCircle />\r\n\r\n                                        </IconButton>\r\n                                        {/* <Typography variant=\"caption\" component=\"p\">\r\n                                                Iniciar Sesion\r\n                                                         </Typography> */}\r\n                                        {/* </Box> */}\r\n                                    </Link>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* {renderMobileMenu} */}\r\n            {/* {renderMenu} */}\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n    currentUser: currentUserSelector(state),\r\n    hidden: hiddeCartSelector(state)\r\n})\r\n\r\n\r\nexport default connect(mapStatetoProps)(Nav);","import { createSelector } from 'reselect';\r\n\r\nconst directory = state => state.directory.DirectoryData;\r\nconst newcollection = state => state.directory.newCollection;\r\n\r\nexport const categorySelector = createSelector(\r\n    [directory],\r\n    data => {\r\n        if (data !== '') {\r\n            console.log(data);\r\n            return (\r\n                Object.keys(data.prendas).filter( (key, i) => i < 4).map(prenda => ({\r\n                    id: data.name.toLowerCase(),\r\n                    name: data.prendas[prenda].name,\r\n                    image: data.prendas[prenda].image\r\n                }))\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n)\r\n\r\nexport const newCollectionSelector = createSelector(\r\n    [newcollection],\r\n    collection => collection\r\n)\r\n\r\nexport const landscapeImageSelector = createSelector(\r\n    [directory],\r\n    directory => directory.landscape\r\n)","import { createSelector } from 'reselect';\r\n\r\nconst data = state => state.shop;\r\n\r\nexport const landscapeImageSelector = (genreId) => createSelector(\r\n    [data],\r\n    data => {\r\n        const collectionGenre = data.dataShop.find(item => item.genre === genreId);\r\n        console.log(collectionGenre);\r\n        if (collectionGenre === undefined)\r\n            return \"\"\r\n        else\r\n            return collectionGenre.landscape;\r\n    }\r\n)\r\nexport const dataShopSelector = (genreId) => createSelector(\r\n    [data],\r\n    data => {\r\n        const collectionGenre = data.dataShop.find(item => item.genre === genreId);\r\n        // console.log(collectionGenre);\r\n        const resultCollection = Object.keys(collectionGenre.categories).map(key => {\r\n\r\n            const imageByCategory = Object.keys(collectionGenre.categories[key]).filter((item, i) => i < 1)\r\n                .map(item => collectionGenre.categories[key][item].image[0])\r\n\r\n            return {\r\n                name: key,\r\n                image: imageByCategory[0]\r\n            }\r\n\r\n        })\r\n\r\n        return resultCollection;\r\n    }\r\n)\r\n\r\nexport const suggestedCollectionsSelector = (genreId) => createSelector(\r\n    [data],\r\n    data => {\r\n        const collectionGenre = data.dataShop.find(item => item.genre === genreId);\r\n        const categoryRandom = Object.keys(collectionGenre.categories)[0]\r\n        const categorySuggested = collectionGenre.categories[categoryRandom]\r\n        // console.log(categorySuggested);\r\n        const itemResults = Object.keys(categorySuggested).map(itemKey => ({...categorySuggested[itemKey] , categoryid : categoryRandom}))\r\n        return itemResults\r\n    }\r\n)\r\n\r\nexport const dataCollectionSelector = (collectionId, genreId) => createSelector(\r\n    [data],\r\n    data => {\r\n        console.log(collectionId);\r\n        console.log(genreId);\r\n        const collectionGenre = data.dataShop.find(item => item.genre === genreId);\r\n        console.log(collectionGenre);\r\n        const itemCollections = Object.keys(collectionGenre.categories[collectionId.toLowerCase()])\r\n            .map(itemKey => collectionGenre.categories[collectionId.toLowerCase()][itemKey])\r\n        return itemCollections\r\n    }\r\n\r\n    //\r\n    //     \r\n)\r\n\r\nexport const dataProductDetailSelector = (collectionId, productId, genreId) => createSelector(\r\n    [data],\r\n    data => {\r\n        const collectionGenre = data.dataShop.find(item => item.genre === genreId);\r\n        const itemDetail = Object.keys(collectionGenre.categories[collectionId]).map(itemKey =>\r\n            collectionGenre.categories[collectionId][itemKey]\r\n        ).find(item => item.name === productId)\r\n        return itemDetail;\r\n    }\r\n\r\n\r\n\r\n\r\n    //    [collectionId].items.find(item => item.name.toLowerCase() === productId.toLowerCase())\r\n)\r\n\r\nexport const isLoadingCollections = createSelector(\r\n    [data],\r\n    data => data.isFetching\r\n)\r\n","import shop_types from './shop.types';\r\n// import TEMPDATA from './tempdata';\r\n\r\nimport { convertCollectionsToObjects, firestore, createCollectionAndDocuments } from '../../FireBase/FireBaseUtil';\r\n\r\nconst fetchingCollectionSucces = (collections) => {\r\n    return {\r\n        type: shop_types.FETCHING_COLLECTIONS_SUCCESS,\r\n        payload: collections\r\n    }\r\n}\r\n\r\nconst fetchingCollectionStart = () => {\r\n    return {\r\n        type: shop_types.FETCHING_COLLECIONS_START\r\n    }\r\n}\r\n\r\nconst fetchingCollectionFailed = (error) => {\r\n    return {\r\n        type: shop_types.FETCHING_COLLECTIONS_FAILED,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchingCollectionsAsync = (collections) => {\r\n    return (dispatch) => {\r\n        // const collectionRef = firestore.collection('collections').where('genre', '==', genre);\r\n\r\n        // dispatch(fetchingCollectionStart());\r\n\r\n        /*  collectionRef.get().then(snapShot => {\r\n             snapShot.docs.forEach(document => {\r\n                 dispatch(fetchingCollectionSucces({ id: document.id , ...document.data()}))\r\n             })\r\n         }) */\r\n        dispatch(fetchingCollectionSucces(collections))\r\n    }\r\n}","import React from 'react';\r\n// import logo1 from \"../../assets/images/imageone.jpg\";\r\n// import logo2 from \"../../assets/images/imagetwo.jpg\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Header = ({image}) => {\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        arrows: false\r\n       \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src={image} alt=\"\" />\r\n                </div>\r\n            </Slider>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst NextArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{ ...style, display: \"block\", color: \"black\" , marginRight:25 , zIndex: 5 }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}\r\n\r\nexport default NextArrow;","import React from 'react';\r\n\r\nconst PreviewArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{ ...style, display: \"block\", color: \"black\" , marginLeft:25 , zIndex: 5 , fontSize: 15 }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PreviewArrow;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n// import ButtonCustom from '../Button/Button';\r\nimport { addItemsToCart } from '../../Redux/Cart/cart.action';\r\n\r\nimport { FavoriteBorder } from '@material-ui/icons';\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n  makeStyles,\r\n  Box,\r\n  CardActions,\r\n  Button,\r\n  Grid\r\n\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 545,\r\n    margin: theme.spacing(1)\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n  icon: {\r\n    fontSize: 30\r\n  }\r\n}));\r\n\r\nconst CardImages = ({ item, addItemsToCart, tagId }) => {\r\n  const classes = useStyles();\r\n  // console.log(item);\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  let url;\r\n  if (tagId !== '') {\r\n    if (match.params.hasOwnProperty('collectionId')) {\r\n      url = match.url;\r\n    } else {\r\n      url = `${match.url}/${item.categoryid}`\r\n    }\r\n  }else{\r\n    console.log(\"no tag\");\r\n    console.log(item);\r\n    url = `${item.genreid}/${item.categoryid}`\r\n  }\r\n\r\n  console.log(match.params);\r\n  return (\r\n\r\n    <Card className={classes.root} >\r\n      <CardActionArea onClick={() => history.push(`${url}/${encodeURI(item.name)}`)}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={item.image[0]}\r\n        />\r\n        <CardContent>\r\n          <Box display=\"flex\" width=\"auto\">\r\n            <Box flexGrow={1}>\r\n              <Typography variant=\"h5\" component=\"h2\" >\r\n                {item.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\" >\r\n                {`$${item.price}`}\r\n              </Typography>\r\n            </Box>\r\n            <Box >\r\n              <FavoriteBorder className={classes.icon} />\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={() => { addItemsToCart(item) }} variant='outlined' size=\"small\" color=\"primary\">\r\n          Agregar al Carrito\r\n      </Button>\r\n      </CardActions>\r\n    </Card>\r\n\r\n    //   <ButtonCustom onClick={() => { addItemsToCart(item) }} >Agregar al Carro</ButtonCustom>\r\n  );\r\n}\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n  addItemsToCart: (item) => { dispatch(addItemsToCart(item)) }\r\n})\r\n\r\nexport default connect(null, mapDispatchToState)(CardImages);","import React from 'react'\r\nimport Slider from \"react-slick\";\r\nimport NextArrow from '../SlickArrows/NextArrow';\r\nimport PreviewArrow from '../SlickArrows/PreviewArrow';\r\nimport CardImages from '../CardImages/CardImages'\r\n\r\nimport { Container, Grid } from '@material-ui/core';\r\n\r\nconst SlickCollection = ({ collections , tagId}) => {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 2,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PreviewArrow />\r\n    };\r\n    console.log({ collections });\r\n    return (\r\n        <Container>\r\n            <Slider {...settings}>\r\n                {collections.map((collection, i) => (\r\n                    <CardImages key={i} item={collection} tagId={tagId} />\r\n                ))}\r\n            </Slider>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default SlickCollection\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n//selectors\r\nimport { categorySelector, newCollectionSelector} from '../../Redux/directory/directory.selectors';\r\nimport { landscapeImageSelector} from '../../Redux/shop/shop.selectors';\r\n//actions\r\nimport { loadDirectory, loadNewCollection } from '../../Redux/directory/directory.action';\r\nimport { fetchingCollectionsAsync } from '../../Redux/shop/shop.actions';\r\n//firebase\r\nimport { firestore } from '../../FireBase/FireBaseUtil';\r\n//components\r\nimport Header from '../../components/Header/Header';\r\nimport SlickCollection from '../SlickCollection/SlickCollection'\r\n\r\nimport { StarBorderTwoTone } from '@material-ui/icons'\r\n\r\nimport {\r\n    Box, Typography, makeStyles,\r\n    GridListTileBar,\r\n    GridList,\r\n    GridListTile,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 'auto',\r\n        // height: 450,\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    gridListTitle: {\r\n        cursor: 'Pointer'\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n            'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n    },\r\n    image:{\r\n        backgroundPosition : \"center\",\r\n        backgroundSize: '200px 100px'\r\n    }\r\n}));\r\n\r\nconst Directory = ({ categoryCollection, loadDirectory, loadNewCollection, newCollection, loadallCollections , imageHeader }) => {\r\n    console.log(newCollection);\r\n    console.log({imageHeader});\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        console.log(\"Fetching Directory Data\");\r\n        const docRef = firestore.collection('genre').doc('mujer')\r\n        docRef.get().then(document => {\r\n            // const docuResult = document.data();\r\n            console.log(document.data());\r\n            loadDirectory(document.data());\r\n        })\r\n\r\n        const collectionRef = firestore.collection('collections')\r\n        collectionRef.get().then(snapshot => {\r\n            \r\n            loadallCollections(snapshot.docs.map(document => ({ id: document.id, ...document.data() })))\r\n\r\n            const allNewCollection = []\r\n            snapshot.docs.forEach(document => {\r\n                Object.keys(document.data().categories).forEach(category => {\r\n                    Object.keys(document.data().categories[category]).forEach(itemKey => {\r\n                        allNewCollection.push({...document.data().categories[category][itemKey], categoryid : category , genreid : document.data().genre})\r\n                    })\r\n                })\r\n            })\r\n\r\n            // console.log(allNewCollection);\r\n            allNewCollection.sort(function (x, y) {\r\n                return y.createdt.toDate() - x.createdt.toDate()\r\n            })\r\n            loadNewCollection(allNewCollection);\r\n        })\r\n    }, [loadDirectory, loadNewCollection]);\r\n\r\n    const handleCategory = (collection) => {\r\n        console.log(collection);\r\n        history.push(`${collection.id}/${collection.name.toLowerCase()}`)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Header image={imageHeader}/>\r\n            <Box mt={6} mb={2} display=\"flex\" justifyContent=\"center\">\r\n                <Typography variant=\"h5\">\r\n                    COLECCIONES\r\n                    </Typography>\r\n            </Box>\r\n            <Box p={2}>\r\n                <div className={classes.root}>\r\n                    <GridList cellHeight={200} spacing={10} cols={4} className={classes.gridList} >\r\n                        {categoryCollection && categoryCollection.map((collection, i) => (\r\n                            <GridListTile className={classes.gridListTitle} key={i} cols={2} rows={2} onClick={() => handleCategory(collection)} >\r\n                                <img className={classes.image} src={collection.image} alt=\"\" />\r\n                                <GridListTileBar\r\n                                    title={collection.name.toUpperCase()}\r\n                                    titlePosition=\"top\"\r\n                                    // actionIcon={\r\n                                    //     <IconButton aria-label={`star ${collection.items[0].name}`} className={classes.icon}>\r\n                                    //         <StarBorderTwoTone />\r\n                                    //     </IconButton>\r\n                                    // }\r\n                                    actionPosition=\"left\"\r\n                                    className={classes.titleBar}\r\n                                />\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </div>\r\n            </Box>\r\n            {/*  */}\r\n            <Box mt={4} mb={2} ml={2} >\r\n                <Typography variant=\"h5\">\r\n                    New Colecciones\r\n                    </Typography>\r\n                <SlickCollection collections={newCollection}  tagId=\"\"/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    categoryCollection: categorySelector,\r\n    newCollection: newCollectionSelector,\r\n    imageHeader: landscapeImageSelector('mujer')\r\n})\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    loadDirectory: (items) => dispatch(loadDirectory(items)),\r\n    loadNewCollection: (items) => dispatch(loadNewCollection(items)),\r\n    loadallCollections: (collections) => dispatch(fetchingCollectionsAsync(collections))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Directory);\r\n\r\n","import directoryTypes from './directory.types';\r\n\r\nexport const loadDirectory = (items) => {\r\n    return {\r\n        type: directoryTypes.LOAD_CATEGORY_CLOTHES,\r\n        payload: items\r\n    }\r\n}\r\n\r\nexport const loadNewCollection = (items) => {\r\n    return {\r\n        type: directoryTypes.LOAD_NEW_COLLECTION,\r\n        payload: items\r\n    }\r\n}","import React from 'react';\r\nimport Directory from '../../components/Directory/Directory';\r\n\r\nconst HomePage = (props) => {\r\n    \r\n    return (\r\n       <Directory />\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { dataShopSelector, suggestedCollectionsSelector, landscapeImageSelector } from '../../Redux/shop/shop.selectors';\r\n\r\n//components\r\nimport SlickCollection from '../SlickCollection/SlickCollection';\r\nimport Header from '../Header/Header';\r\n\r\nimport {\r\n    Box, makeStyles,\r\n    Typography, GridList,\r\n    GridListTile,\r\n    GridListTileBar,\r\n    IconButton,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nimport { Info } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    // gridList: {\r\n    //     // width: 500,\r\n    //     // height: 450,\r\n    // },\r\n    gridListTile: {\r\n        cursor: \"pointer\"\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst CollectionOverview = ({ collections, suggestedCollection , imageHeader , tagId }) => {\r\n    let history = useHistory();\r\n    let match = useRouteMatch();\r\n\r\n    const classes = useStyles();\r\n    console.log(suggestedCollection);\r\n    console.log(collections);\r\n    // console.log(tagId);\r\n\r\n    return (\r\n        <Box>\r\n            <Header image={imageHeader} />\r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid xs={12} item className={classes.title}>\r\n                    <Typography variant=\"h5\" > COLECCIONES  </Typography>\r\n                </Grid>\r\n                <Box height=\"auto\" width=\"auto\" m={4} display=\"flex\" justifyContent=\"center\">\r\n                    <Grid xs={12} item>\r\n                        <div className={classes.root}>\r\n                            <GridList cols={3} cellHeight={400}>\r\n                                {collections.map((collection, i) => (\r\n                                    <GridListTile key={i}\r\n                                        className={classes.gridListTile}\r\n                                        onClick={() => history.push(`${match.url}/${collection.name}`)}>\r\n                                        <img src={collection.image} alt={collection.name} />\r\n                                        <GridListTileBar\r\n                                            title={collection.name.toUpperCase()}\r\n                                            actionIcon={\r\n                                                <IconButton aria-label={`info about ${collection.category}`} className={classes.icon}>\r\n                                                    <Info />\r\n                                                </IconButton>\r\n                                            }\r\n                                        />\r\n                                    </GridListTile>\r\n                                ))}\r\n                            </GridList>\r\n                        </div>\r\n                    </Grid>\r\n                </Box>\r\n\r\n                {/* <Grid xs={12} item>\r\n                    <Typography variant=\"h5\" > Prendas Recomendadas  </Typography>\r\n                </Grid> */}\r\n                {/* <Grid xs={12} item className={classes.title}>\r\n                </Grid> */}\r\n            </Grid>\r\n            <Box  mt={4} mb={2} ml={2}>\r\n                <Typography variant=\"h5\" > Prendas Recomendadas  </Typography>\r\n                <SlickCollection collections={suggestedCollection} tagId={tagId} />\r\n            </Box>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collections: dataShopSelector(ownProps.tagId)(state),\r\n    suggestedCollection: suggestedCollectionsSelector(ownProps.tagId)(state),\r\n    imageHeader: landscapeImageSelector(ownProps.tagId)(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { dataCollectionSelector } from '../../Redux/shop/shop.selectors';\r\nimport CardImages from '../../components/CardImages/CardImages';\r\n// import './collection.styles.css';\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nconst CollectionPage = ({ itemscollection }) => {\r\n\r\n    // console.log(itemscollection);\r\n    return (\r\n        <Grid container\r\n            direction=\"row\"\r\n        >\r\n            {\r\n                itemscollection.map((item, i) => (\r\n                    <Grid key={i} xs={12} sm={3} item>\r\n                        <CardImages key={i} item={item} />\r\n                    </Grid>\r\n                )\r\n                )\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    itemscollection: dataCollectionSelector(ownProps.match.params.collectionId, ownProps.tagId)(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addItemsToCart } from '../../Redux/Cart/cart.action';\r\n\r\n//selectors\r\nimport { dataProductDetailSelector } from '../../Redux/shop/shop.selectors'\r\nimport { newCollectionsHomeSelector } from '../../Redux/directory/directory.selectors'\r\n\r\n//components\r\nimport SlickCollection from '../SlickCollection/SlickCollection'\r\nimport { Done } from '@material-ui/icons'\r\nimport {\r\n    GridList,\r\n    GridListTile,\r\n    makeStyles,\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button\r\n\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 800,\r\n        // height: 450,\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    productDetail: {\r\n        margin: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst ProductDetail = ({ product, addItemsToCart }) => {\r\n    const classes = useStyles();\r\n\r\n    const [talla, setTalla] = useState('')\r\n    // console.log(newCollections);\r\n\r\n    const handleTalla = (event) => {\r\n        console.log(event.target);\r\n        setTalla(event.target.value)\r\n    }\r\n\r\n    return (\r\n        // <div className={classes.root}>\r\n        <Grid container >\r\n            <Grid item xs={12} sm={8}>\r\n                <div className={classes.root}>\r\n                    <GridList cellHeight={200} spacing={4} cols={4} className={classes.gridList}>\r\n                        {product.image.map((image, i) => (\r\n                            <GridListTile key={i} cols={2} rows={2}>\r\n                                <img src={image} alt=\"\" />\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} >\r\n                <Box height=\"100%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" mt={4}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" m={2}>\r\n                        {/* <Grid container > */}\r\n                        {/* <Grid item container xs display=\"flex\" direction=\"row\" justify=\"space-between\" > */}\r\n                        <Typography variant=\"h5\" component=\"h6\">\r\n                            {product.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h6\">\r\n                            {`$${product.price}`}\r\n                        </Typography>\r\n                        {/* </Grid> */}\r\n                        {/* </Grid> */}\r\n\r\n                    </Box>\r\n                    <Box m={2}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"select-talla\">Selecciona tu talla</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-talla\"\r\n                                id=\"talla\"\r\n                                value={talla}\r\n                                name=\"talla\"\r\n                                onChange={handleTalla}\r\n                            >\r\n                                {\r\n                                    product.tallas.map((talla,i) => <MenuItem key={i} value={talla}>{talla}</MenuItem>)\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box m={2}>\r\n                        <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={() => addItemsToCart(product)}>\r\n                            Añadir al carrito\r\n                    </Button>\r\n                    </Box>\r\n                    <Box m={2} display=\"flex\">\r\n                        <Done />\r\n                        <Typography component=\"h6\">\r\n                            Envio Gratis\r\n                    </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box p={4} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" >\r\n                    <Typography variant=\"body1\" component=\"h5\" >\r\n                        Detalles del Producto\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        {product.detail}\r\n                    </Typography>\r\n                </Box>\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box mt={2} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"body1\" component=\"h5\" >\r\n                        RECOMENDACIONES\r\n                    </Typography>\r\n                    {/* <SlickCollection collections={newCollections[0].items} /> */}\r\n                </Box>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    addItemsToCart: (item) => { dispatch(addItemsToCart(item)) }\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    product: dataProductDetailSelector(ownProps.match.params.collectionId, ownProps.match.params.productId , ownProps.tagId)(state)\r\n    // newCollections: newCollectionsHomeSelector(state)\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToState)(ProductDetail)\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//redux\r\nimport { fetchingCollectionsAsync } from '../../Redux/shop/shop.actions';\r\nimport { isLoadingCollections } from '../../Redux/shop/shop.selectors';\r\n\r\n//components\r\nimport CollectionOverview from '../../components/CollectionOverview/CollectionOverview';\r\nimport CollectionPage from '../CollectionPage/CollectionPage';\r\nimport ProductDetail from '../../components/productDetail/ProductDetail';\r\n//HOC\r\nimport WithSpinner from '../../components/with-spinner/withSpinner';\r\n\r\nconst CollectionOverviewWitSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWitSpinner = WithSpinner(CollectionPage);\r\nconst ProductDetailWitSpinner = WithSpinner(ProductDetail);\r\n\r\nconst ShopPage = ({isLoading}) => {\r\n\r\n    let match = useRouteMatch();\r\n    let { tagid } = match.params;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"rendering ShopPage\");\r\n        console.log(tagid);\r\n        // fetchCollections(tagid);\r\n    }, []);\r\n\r\n    // console.log({ isLoading });\r\n    // console.log({ match });\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.url}>\r\n                <CollectionOverviewWitSpinner isLoading={isLoading} tagId={tagid} />\r\n            </Route>\r\n            <Route exact path={`${match.url}/:collectionId`}\r\n                render={(props) => <CollectionPageWitSpinner  isLoading={isLoading} tagId={tagid} {...props} />}>\r\n            </Route>\r\n            <Route path={`${match.url}/:collectionId/:productId`}\r\n                render={(props) => <ProductDetailWitSpinner isLoading={isLoading} {...props} tagId={tagid} />}>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\n// const mapDispatchToState = (dispatch) => ({\r\n//     getCollections: (genre) => dispatch(fetchingCollectionsAsync(genre))\r\n// })\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading: isLoadingCollections(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ShopPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItemsToCart, clearItem, removeItem } from '../../Redux/Cart/cart.action';\r\n\r\nimport './checkout-item.styles.css'\r\nimport {  makeStyles , Avatar} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n     width: theme.spacing(15),\r\n     height: theme.spacing(15),\r\n },\r\n}));\r\n\r\nconst CheckOutItems = ({ cartItem, removeItem, addItem, clearItem }) => {\r\n    const classes = useStyles();\r\n\r\n    const { image, name, price, quantity } = cartItem;\r\n    return (\r\n        <div className='checkout-item'>\r\n            <div className='image-container'>\r\n                <Avatar alt={name} src={image} className={classes.large} />\r\n            </div>\r\n            <span className='name'>{name}</span>\r\n            <span className='quantity'>\r\n                <div className='arrow' onClick={() => removeItem(cartItem)}>\r\n                    &#10094;\r\n        </div>\r\n                <span className='value'>{quantity}</span>\r\n                <div className='arrow' onClick={() => addItem(cartItem)}>\r\n                    &#10095;\r\n        </div>\r\n            </span>\r\n            <span className='price'>{price}</span>\r\n            <div className='remove-button' onClick={() => clearItem(cartItem)}>\r\n                &#10005;\r\n      </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToState = (dispatch) => ({\r\n    removeItem: (item) => dispatch(removeItem(item)),\r\n    addItem: (item) => dispatch(addItemsToCart(item)),\r\n    clearItem: (item) => dispatch(clearItem(item))\r\n})\r\nexport default connect(null, mapDispatchToState)(CheckOutItems);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { cartitemsSelector , itemTotaValueSelector } from '../../Redux/Cart/cart-selectors';\r\nimport CheckOutItems from '../../components/checkoutitems/checkOutItems'\r\n\r\nimport './checkout.styles.css'\r\n\r\nconst CheckOutPage = ({cartitems , totalprice}) => {\r\n    console.log(cartitems);\r\n    \r\n    return (\r\n        <div className='checkout-page'>\r\n            <div className='checkout-header'>\r\n                <div className='header-block'>\r\n                    <span>Product</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Description</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Quantity</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Price</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Remove</span>\r\n                </div>\r\n            </div>\r\n            {cartitems.map( (item, index) => <CheckOutItems key={index} cartItem={item}/>  )}    \r\n            <div className='total'>TOTAL: ${totalprice}</div>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =  createStructuredSelector({\r\n    cartitems: cartitemsSelector,\r\n    totalprice: itemTotaValueSelector\r\n})\r\nexport default connect(mapStateToProps)(CheckOutPage);","import React, { useState } from 'react';\r\n// import InputField from '../FormInput/InputField';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// import Button from '../Button/Button';\r\nimport { signInWithGoogle  , auth} from '../../FireBase/FireBaseUtil';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  CssBaseline,\r\n  Avatar,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Link,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignInComponent = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState({ email: '', password: '' });\r\n\r\n  const handleInputs = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  }\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth.signInWithEmailAndPassword(user.email, user.password)\r\n    setUser({ username: '', password: '' })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {/* <Typography component=\"h1\" variant=\"h5\">\r\n          Iniciar Sesion\r\n        </Typography> */}\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleInputs}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleInputs}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSignIn}\r\n          >\r\n            Iniciar Sesion\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={signInWithGoogle}\r\n          >\r\n            Iniciar Sesion con cuenta de Google\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\r\n                No tienes cuenta? Registrate!\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\n\r\nexport default SignInComponent;","import React, { useState } from 'react';\r\n// import FirmInput from '../FormInput/InputField';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// import Button from '../Button/Button';\r\nimport { auth, createDocumentUserDb } from '../../FireBase/FireBaseUtil';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    CssBaseline,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button,\r\n    Link,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [userRegister, setUserRegister] = useState({ displayName: '', email: '', password: '', repassword: '' })\r\n\r\n    const handleInputs = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setUserRegister({ ...userRegister, [name]: value });\r\n    }\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userRegister.password === userRegister.repassword) {\r\n            const { email, password, displayName } = userRegister;\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            createDocumentUserDb(user, { displayName ,  isAdmin : true , tienda: 'Lulu' })\r\n        } else {\r\n            alert(\"Contraseñas no Coinciden\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Registro\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                onChange={handleInputs}\r\n                                autoComplete=\"fname\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"displayName\"\r\n                                label=\"Nombre\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleInputs}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleInputs}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={handleInputs}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"repassword\"\r\n                                label=\"Re-Password\"\r\n                                type=\"password\"\r\n                                id=\"repassword\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        onClick={handleSignIn}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Registrar\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\r\n                                Ya tienes una cuenta? Inicia sesion.\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default SignUp;","import React from 'react';\r\n\r\nimport { Facebook, Instagram } from '@material-ui/icons';\r\n\r\nimport {\r\n    Container,\r\n    makeStyles,\r\n    TextField,\r\n    Typography,\r\n    Box\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}))\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <footer>\r\n            <Container maxWidth=\"md\" className={classes.footer}>\r\n                <Typography component=\"h5\">Suscribete a nuestro newsletter </Typography>\r\n\r\n                <TextField size=\"small\" id=\"outlined-basic\" label=\"Introduce tu Email\" variant=\"standard\" />\r\n\r\n                <Box m={2}>\r\n                    <Typography component=\"h5\">Cartagena | Colombia </Typography>\r\n                </Box>\r\n                <Box m={2} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Facebook />\r\n                    <Instagram />\r\n                </Box >\r\n                <Typography component=\"h6\">2020 LULU todos los derechos reservados</Typography>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\nimport { auth, createDocumentUserDb } from './FireBase/FireBaseUtil';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './Redux/user/user.actions';\nimport { currentUserSelector } from './Redux/user/user-selectors';\n\n//components\nimport MiniDrawer from './components/Admin-components/mini-drawer/MiniDrawer';\nimport ProductHome from './components/Admin-components/products/ProductHomePage.component'\nimport ListPrendas from './components/Admin-components/prendas/ListPrendas'\nimport Nav from './components/Navegation/Nav';\n// import NavAdmin from './components/Admin-components/NavAdmin/NavAdmin.component';\nimport HomePage from './pages/homepage/HomePage';\nimport ShopPage from './pages/ShopPage/ShopPage';\nimport CheckoutPage from './pages/CheckoutPage/checkout.component';\nimport SignInComponent from './components/SignInComponent/SignInComponent';\nimport SignUp from './components/SignUpComponent/SignUp';\nimport Footer from './components/Footer/Footer';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nconst App = ({ setCurrentUser, currentUser }) => {\n\n  useEffect(() => {\n    // const { setCurrentUser } = props;\n    console.log(\"APP home\");\n\n    auth.onAuthStateChanged(async (user) => {\n\n      if (user) {\n        const userRef = createDocumentUserDb(user);\n        const currentUserRef = await userRef;\n        currentUserRef.onSnapshot(docSnapshot => {\n          // console.log(docSnapshot);\n          setCurrentUser({\n            id: docSnapshot.id,\n            ...docSnapshot.data()\n          })\n        });\n\n      } else {\n        setCurrentUser(user)\n      }\n    });\n  }, [setCurrentUser]);\n\n  return (\n    <div>\n      {\n        //  <MiniDrawer />\n        currentUser && currentUser.isAdmin ?\n          <MiniDrawer />\n          :\n          (<Router basename=\"/luluecommerce\">\n\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/signin\" render={() => currentUser ? <Redirect to=\"/\" /> : <SignInComponent />} />\n              <Route exact path=\"/signup\" render={() => currentUser ? <Redirect to=\"/\" /> : <SignUp />} />\n              <Route exact path=\"/checkout\">\n                <CheckoutPage />\n              </Route>\n              <Route path=\"/:tagid\">\n                <ShopPage />\n              </Route>\n            </Switch>\n            <Footer />\n          </Router>)\n      }\n\n    </div>\n  )\n}\n\nconst mapSateToProps = (state) => ({\n  currentUser: currentUserSelector(state)\n})\n\nconst mapDispatchToState = dispatch => ({\n  setCurrentUser: user => { dispatch(setCurrentUser(user)) }\n})\nexport default connect(mapSateToProps, mapDispatchToState)(App);\n","import {userActionTypes } from './user.types';\r\n\r\nexport const setCurrentUser = user => {\r\n    return {\r\n        type: userActionTypes.SET_CURRENT_USER,\r\n        payload: user\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store , persistor} from './Redux/store';\nimport App from './App';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./assets/custom.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}